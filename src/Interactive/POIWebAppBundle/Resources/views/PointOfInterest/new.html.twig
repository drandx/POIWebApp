{% extends 'POIWebAppBundle:Administrator:dashboard.html.twig' %}
{% set menu_selected = 'one' %}
{% block stylesheets %}
 {{ parent() }}
<style>
      .controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        padding: 0 11px 0 13px;
        width: 400px;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        text-overflow: ellipsis;
      }

      #pac-input:focus {
        border-color: #4d90fe;
        margin-left: -1px;
        padding-left: 14px;  /* Regular padding-left + 1. */
        width: 401px;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
    </style>
{% endblock%}
{% block javascripts %}
 {{ parent() }}
<script type="text/javascript">
    var markersArray = [];
       function initialize() {
  var mapOptions = {
    center: new google.maps.LatLng(-33.8688, 151.2195),
    zoom: 13
  };
  var map = new google.maps.Map(document.getElementById('map-canvas'),
    mapOptions);

  var input = /** @type {HTMLInputElement} */(
      document.getElementById('pac-input'));

  var types = document.getElementById('type-selector');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  google.maps.event.addListener(map, 'click', function(e) {
            clearOverlays();
            placeMarker(e.latLng, map);
            document.getElementById("interactive_poiwebappbundle_pointofinterest_latitude").value = e.latLng.lat();
            document.getElementById("interactive_poiwebappbundle_pointofinterest_longitude").value = e.latLng.lng();
  });
  
  google.maps.event.addListener(autocomplete, 'place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address +'</br>'+ place.geometry.location.lat() + ',' + place.geometry.location.lng());
    infowindow.open(map, marker);
    
    document.getElementById("interactive_poiwebappbundle_pointofinterest_latitude").value = place.geometry.location.lat();
    document.getElementById("interactive_poiwebappbundle_pointofinterest_longitude").value = place.geometry.location.lng();
    
  });
  // Sets a listener on a radio button to change the filter type on Places
  // Autocomplete.
  function setupClickListener(id, types) {
    var radioButton = document.getElementById(id);
    google.maps.event.addDomListener(radioButton, 'click', function() {
      autocomplete.setTypes(types);
    });
  }

  setupClickListener('changetype-all', []);
  setupClickListener('changetype-establishment', ['establishment']);
  setupClickListener('changetype-geocode', ['geocode']);
}
function placeMarker(position, map) {
            var marker = new google.maps.Marker({position: position,map: map});
            map.panTo(position);
            markersArray.push(marker);
}
function clearOverlays() {
    if (markersArray) {
        for (i in markersArray) {
            markersArray[i].setMap(null);
        }
    }
}
google.maps.event.addDomListener(window, 'load', initialize);
    </script>
{% endblock %}
{% block content %}
    <h2 class="sub-header">Crear Punto de Inter√©s</h2>
    {% form_theme form 'POIWebAppBundle:Form:interactiveFiledsTemplate.html.twig' %}
   {# {{ form(form) }}#}
    <form class="form-horizontal" name="interactive_poiwebappbundle_pointofinterest" method="post" action="/POIWebApp/web/app_dev.php/admin/point/create">
   {#{{ form_start(form) }}#}
        {{ form_errors(form) }}
        {{ form_row(form.geocity) }}
        {{ form_row(form.latitude) }}
        {{ form_row(form.longitude) }}
        <div class="container-fluid">
        {#<a href="{{ path('poi_map') }}">Map<a/>#}
            <input id="pac-input" class="controls" type="text" placeholder="Enter a location">
            <div id="type-selector" class="controls">
                <input type="radio" name="type" id="changetype-all" checked="checked">
                <label for="changetype-all">All</label>

                <input type="radio" name="type" id="changetype-establishment">
                <label for="changetype-establishment">Establishments</label>

                <input type="radio" name="type" id="changetype-geocode">
                <label for="changetype-geocode">Geocodes</label>
            </div>
            <div id="map-canvas" class="row" style="height: 400px"/>
        </div>
        {#{{ form_row(form.submit) }}#}
        {{ form_row(form.description) }}
        {{ form_row(form.address) }}
        {{ form_row(form.category) }}
        {#<div>
            <div class="col-sm-offset-2 col-sm-10">
                <button class="btn btn-default" type="submit" id="interactive_poiwebappbundle_pointofinterest_submit" name="interactive_poiwebappbundle_pointofinterest[submit]">Crear Punto</button>
            </div>
        </div>#}
        {{ form_end(form) }}
   </form>
{% endblock %}

